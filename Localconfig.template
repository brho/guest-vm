#!/bin/bash
# Configuration for your kernel and initramfs.  This get's sourced into
# numerous bash scripts, possibly multiple times for a given script.  It has
# hokey ifndef guards.
#
# Most variables can be adjusted on the command line too.  For some, e.g.
# LINUX_REPO, the command line / environment takes precedence.  For others, e.g.
# PACKAGES, the command line / environment is additive.

# bash #ifndef, #define, endif pattern
if [[ -z $LOCALCONFIG_SOURCED ]]; then
LOCALCONFIG_SOURCED=1


# Must be set to a full, non-relative path.  $HOME works, ~ does not.
LINUX_REPO=${LINUX_REPO:="/path/to/linux/repo"}

# If set, provides the .config for the kernel build
KERNEL_CONFIG=${KERNEL_CONFIG:=""}

# Initramfs: must end in .cpio.gz.  This is relative to LINUX_REPO. 
#
# If the initrd is built into the kernel, keep this in sync with the
# KERNEL_CONFIG,
INITRD_NAME=initramfs.cpio.gz

# Command to make the Linux kernel.
MAKE=${MAKE:="ARCH=x86_64 make -j 8"}

# Space-separated list of Tinycore packages to install.  For a list of available
# packages, see http://tinycorelinux.net/16.x/x86_64/tcz/
PACKAGES+=" openssh "

# Set this to the full path to the ssh key, e.g. db_rsa (not .pub) you want to
# install in the guest.  You'll be able to ssh *in* and *out* with this key
SSH_KEY=${SSH_KEY:=""}
SSHD_PORT=${SSHD_PORT:="22"}

# Space-separated paths to binaries on your system you want included in the
# initramfs They will be copied to /usr/local/bin/
CUSTOM_BINARIES+=" "
## Most of my VM apps use this.
#CUSTOM_BINARIES+=" progs/bin/tinyreboot "
## TC's taskset is mediocre.
#CUSTOM_BINARIES+=`which taskset`

# Space-separated paths to be removed from the initramfs.  Paths are relative
# to tc_root.  Find victims with ./cat_cpio_gz.sh.
CUSTOM_REMOVALS+=" "
## fdisk and a lot of simple apps don't need C++
#CUSTOM_REMOVALS+=" usr/lib/libstdc++.so.6.0.21 "


# endif, for the bash #ifndef, #define, endif pattern
fi
